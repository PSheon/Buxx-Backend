{
  "name": "Super Admin",
  "code": "strapi-super-admin",
  "description": "Super Admins can access and manage all features and settings.",
  "permissions": [
    {
      "action": "plugin::content-manager.explorer.create",
      "actionParameters": {},
      "subject": "api::access-log.access-log",
      "properties": {
        "fields": [
          "action",
          "responseMessage",
          "status",
          "date",
          "user",
          "ip",
          "os",
          "browser",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.delete",
      "actionParameters": {},
      "subject": "api::access-log.access-log",
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.read",
      "actionParameters": {},
      "subject": "api::access-log.access-log",
      "properties": {
        "fields": [
          "action",
          "responseMessage",
          "status",
          "date",
          "user",
          "ip",
          "os",
          "browser",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.update",
      "actionParameters": {},
      "subject": "api::access-log.access-log",
      "properties": {
        "fields": [
          "action",
          "responseMessage",
          "status",
          "date",
          "user",
          "ip",
          "os",
          "browser",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.create",
      "actionParameters": {},
      "subject": "api::activity-log.activity-log",
      "properties": {
        "fields": [
          "status",
          "action",
          "refContentType",
          "refId",
          "message",
          "payload",
          "date",
          "user",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.delete",
      "actionParameters": {},
      "subject": "api::activity-log.activity-log",
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.read",
      "actionParameters": {},
      "subject": "api::activity-log.activity-log",
      "properties": {
        "fields": [
          "status",
          "action",
          "refContentType",
          "refId",
          "message",
          "payload",
          "date",
          "user",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.update",
      "actionParameters": {},
      "subject": "api::activity-log.activity-log",
      "properties": {
        "fields": [
          "status",
          "action",
          "refContentType",
          "refId",
          "message",
          "payload",
          "date",
          "user",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.create",
      "actionParameters": {},
      "subject": "api::article.article",
      "properties": {
        "fields": [
          "cover",
          "category",
          "displayName",
          "description",
          "content",
          "author",
          "status",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.delete",
      "actionParameters": {},
      "subject": "api::article.article",
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.read",
      "actionParameters": {},
      "subject": "api::article.article",
      "properties": {
        "fields": [
          "cover",
          "category",
          "displayName",
          "description",
          "content",
          "author",
          "status",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.update",
      "actionParameters": {},
      "subject": "api::article.article",
      "properties": {
        "fields": [
          "cover",
          "category",
          "displayName",
          "description",
          "content",
          "author",
          "status",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.create",
      "actionParameters": {},
      "subject": "api::daily-check-record.daily-check-record",
      "properties": {
        "fields": [
          "user",
          "date",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.delete",
      "actionParameters": {},
      "subject": "api::daily-check-record.daily-check-record",
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.read",
      "actionParameters": {},
      "subject": "api::daily-check-record.daily-check-record",
      "properties": {
        "fields": [
          "user",
          "date",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.update",
      "actionParameters": {},
      "subject": "api::daily-check-record.daily-check-record",
      "properties": {
        "fields": [
          "user",
          "date",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.create",
      "actionParameters": {},
      "subject": "api::event-log.event-log",
      "properties": {
        "fields": [
          "action",
          "sftAddress",
          "blockNumber",
          "blockHash",
          "transactionIndex",
          "data",
          "transactionHash",
          "logIndex",
          "topics"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.delete",
      "actionParameters": {},
      "subject": "api::event-log.event-log",
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.read",
      "actionParameters": {},
      "subject": "api::event-log.event-log",
      "properties": {
        "fields": [
          "action",
          "sftAddress",
          "blockNumber",
          "blockHash",
          "transactionIndex",
          "data",
          "transactionHash",
          "logIndex",
          "topics"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.update",
      "actionParameters": {},
      "subject": "api::event-log.event-log",
      "properties": {
        "fields": [
          "action",
          "sftAddress",
          "blockNumber",
          "blockHash",
          "transactionIndex",
          "data",
          "transactionHash",
          "logIndex",
          "topics"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.create",
      "actionParameters": {},
      "subject": "api::fund.fund",
      "properties": {
        "fields": [
          "banner",
          "displayName",
          "category",
          "description",
          "chain",
          "baseCurrency",
          "genesisDate",
          "saleStartTime",
          "maturityDate",
          "performanceFeePercentage",
          "redemptionFrequencyInDays",
          "estimatedAPY",
          "detail",
          "defaultPackages",
          "sft.contractName",
          "sft.contractAddress",
          "sft.contractRootSignerAddress",
          "sft.contractRootSignerPrivateKey",
          "sft.contractAbi",
          "sft.version",
          "vault.contractName",
          "vault.contractAddress",
          "vault.contractRootSignerAddress",
          "vault.contractRootSignerPrivateKey",
          "vault.contractAbi",
          "vault.version",
          "twitterUrl",
          "discordUrl",
          "isHighlighted",
          "status"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.delete",
      "actionParameters": {},
      "subject": "api::fund.fund",
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.read",
      "actionParameters": {},
      "subject": "api::fund.fund",
      "properties": {
        "fields": [
          "banner",
          "displayName",
          "category",
          "description",
          "chain",
          "baseCurrency",
          "genesisDate",
          "saleStartTime",
          "maturityDate",
          "performanceFeePercentage",
          "redemptionFrequencyInDays",
          "estimatedAPY",
          "detail",
          "defaultPackages",
          "sft.contractName",
          "sft.contractAddress",
          "sft.contractRootSignerAddress",
          "sft.contractRootSignerPrivateKey",
          "sft.contractAbi",
          "sft.version",
          "vault.contractName",
          "vault.contractAddress",
          "vault.contractRootSignerAddress",
          "vault.contractRootSignerPrivateKey",
          "vault.contractAbi",
          "vault.version",
          "twitterUrl",
          "discordUrl",
          "isHighlighted",
          "status"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.update",
      "actionParameters": {},
      "subject": "api::fund.fund",
      "properties": {
        "fields": [
          "banner",
          "displayName",
          "category",
          "description",
          "chain",
          "baseCurrency",
          "genesisDate",
          "saleStartTime",
          "maturityDate",
          "performanceFeePercentage",
          "redemptionFrequencyInDays",
          "estimatedAPY",
          "detail",
          "defaultPackages",
          "sft.contractName",
          "sft.contractAddress",
          "sft.contractRootSignerAddress",
          "sft.contractRootSignerPrivateKey",
          "sft.contractAbi",
          "sft.version",
          "vault.contractName",
          "vault.contractAddress",
          "vault.contractRootSignerAddress",
          "vault.contractRootSignerPrivateKey",
          "vault.contractAbi",
          "vault.version",
          "twitterUrl",
          "discordUrl",
          "isHighlighted",
          "status"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.create",
      "actionParameters": {},
      "subject": "api::metadata.metadata",
      "properties": {
        "fields": [
          "contractFallbackContent",
          "slotFallbackContent",
          "tokenFallbackContent"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.delete",
      "actionParameters": {},
      "subject": "api::metadata.metadata",
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.read",
      "actionParameters": {},
      "subject": "api::metadata.metadata",
      "properties": {
        "fields": [
          "contractFallbackContent",
          "slotFallbackContent",
          "tokenFallbackContent"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.update",
      "actionParameters": {},
      "subject": "api::metadata.metadata",
      "properties": {
        "fields": [
          "contractFallbackContent",
          "slotFallbackContent",
          "tokenFallbackContent"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.create",
      "actionParameters": {},
      "subject": "api::notification.notification",
      "properties": {
        "fields": [
          "notifier",
          "category",
          "title",
          "content",
          "date",
          "isSeen",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.delete",
      "actionParameters": {},
      "subject": "api::notification.notification",
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.read",
      "actionParameters": {},
      "subject": "api::notification.notification",
      "properties": {
        "fields": [
          "notifier",
          "category",
          "title",
          "content",
          "date",
          "isSeen",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.update",
      "actionParameters": {},
      "subject": "api::notification.notification",
      "properties": {
        "fields": [
          "notifier",
          "category",
          "title",
          "content",
          "date",
          "isSeen",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.create",
      "actionParameters": {},
      "subject": "api::package.package",
      "properties": {
        "fields": [
          "displayName",
          "description",
          "packageId",
          "skin",
          "priceInUnit",
          "slots.propertyName",
          "slots.description",
          "slots.value",
          "slots.displayValue",
          "slots.isIntrinsic",
          "slots.order",
          "slots.displayType",
          "status"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.delete",
      "actionParameters": {},
      "subject": "api::package.package",
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.read",
      "actionParameters": {},
      "subject": "api::package.package",
      "properties": {
        "fields": [
          "displayName",
          "description",
          "packageId",
          "skin",
          "priceInUnit",
          "slots.propertyName",
          "slots.description",
          "slots.value",
          "slots.displayValue",
          "slots.isIntrinsic",
          "slots.order",
          "slots.displayType",
          "status"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.update",
      "actionParameters": {},
      "subject": "api::package.package",
      "properties": {
        "fields": [
          "displayName",
          "description",
          "packageId",
          "skin",
          "priceInUnit",
          "slots.propertyName",
          "slots.description",
          "slots.value",
          "slots.displayValue",
          "slots.isIntrinsic",
          "slots.order",
          "slots.displayType",
          "status"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.create",
      "actionParameters": {},
      "subject": "api::point-record.point-record",
      "properties": {
        "fields": [
          "type",
          "user",
          "earningExp",
          "earningPoints",
          "receipt",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.delete",
      "actionParameters": {},
      "subject": "api::point-record.point-record",
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.read",
      "actionParameters": {},
      "subject": "api::point-record.point-record",
      "properties": {
        "fields": [
          "type",
          "user",
          "earningExp",
          "earningPoints",
          "receipt",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.update",
      "actionParameters": {},
      "subject": "api::point-record.point-record",
      "properties": {
        "fields": [
          "type",
          "user",
          "earningExp",
          "earningPoints",
          "receipt",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.create",
      "actionParameters": {},
      "subject": "api::referral.referral",
      "properties": {
        "fields": [
          "user",
          "referrer",
          "stakedValue",
          "rank",
          "path",
          "level",
          "claimedRewards",
          "lastTeamShareSettlementDate",
          "isActive",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.delete",
      "actionParameters": {},
      "subject": "api::referral.referral",
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.read",
      "actionParameters": {},
      "subject": "api::referral.referral",
      "properties": {
        "fields": [
          "user",
          "referrer",
          "stakedValue",
          "rank",
          "path",
          "level",
          "claimedRewards",
          "lastTeamShareSettlementDate",
          "isActive",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.update",
      "actionParameters": {},
      "subject": "api::referral.referral",
      "properties": {
        "fields": [
          "user",
          "referrer",
          "stakedValue",
          "rank",
          "path",
          "level",
          "claimedRewards",
          "lastTeamShareSettlementDate",
          "isActive",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.create",
      "actionParameters": {},
      "subject": "api::token.token",
      "properties": {
        "fields": [
          "belongToFund",
          "package",
          "contractAddress",
          "owner",
          "tokenId",
          "tokenValue",
          "attributes.traitType",
          "attributes.value",
          "status"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.delete",
      "actionParameters": {},
      "subject": "api::token.token",
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.read",
      "actionParameters": {},
      "subject": "api::token.token",
      "properties": {
        "fields": [
          "belongToFund",
          "package",
          "contractAddress",
          "owner",
          "tokenId",
          "tokenValue",
          "attributes.traitType",
          "attributes.value",
          "status"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.update",
      "actionParameters": {},
      "subject": "api::token.token",
      "properties": {
        "fields": [
          "belongToFund",
          "package",
          "contractAddress",
          "owner",
          "tokenId",
          "tokenValue",
          "attributes.traitType",
          "attributes.value",
          "status"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.create",
      "actionParameters": {},
      "subject": "api::wallet.wallet",
      "properties": {
        "fields": [
          "user",
          "chain",
          "address",
          "connector",
          "isConnected"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.delete",
      "actionParameters": {},
      "subject": "api::wallet.wallet",
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.read",
      "actionParameters": {},
      "subject": "api::wallet.wallet",
      "properties": {
        "fields": [
          "user",
          "chain",
          "address",
          "connector",
          "isConnected"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.update",
      "actionParameters": {},
      "subject": "api::wallet.wallet",
      "properties": {
        "fields": [
          "user",
          "chain",
          "address",
          "connector",
          "isConnected"
        ]
      },
      "conditions": []
    },
    {
      "action": "admin::api-tokens.access",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::api-tokens.create",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::api-tokens.delete",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::api-tokens.read",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::api-tokens.regenerate",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::api-tokens.update",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::marketplace.read",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::project-settings.read",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::project-settings.update",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::roles.create",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::roles.delete",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::roles.read",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::roles.update",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::transfer.tokens.access",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::transfer.tokens.create",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::transfer.tokens.delete",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::transfer.tokens.read",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::transfer.tokens.regenerate",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::transfer.tokens.update",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::users.create",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::users.delete",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::users.read",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::users.update",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::webhooks.create",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::webhooks.delete",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::webhooks.read",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "admin::webhooks.update",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::config-sync.menu-link",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::config-sync.settings.read",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::content-manager.collection-types.configure-view",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::content-manager.components.configure-layout",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.create",
      "actionParameters": {},
      "subject": "plugin::users-permissions.user",
      "properties": {
        "fields": [
          "username",
          "email",
          "provider",
          "password",
          "resetPasswordToken",
          "confirmationToken",
          "confirmed",
          "blocked",
          "lastForgotPasswordAt",
          "role",
          "avatar",
          "title",
          "phone",
          "referralRank",
          "referralPath",
          "referralCode",
          "exp",
          "points",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.delete",
      "actionParameters": {},
      "subject": "plugin::users-permissions.user",
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.read",
      "actionParameters": {},
      "subject": "plugin::users-permissions.user",
      "properties": {
        "fields": [
          "username",
          "email",
          "provider",
          "password",
          "resetPasswordToken",
          "confirmationToken",
          "confirmed",
          "blocked",
          "lastForgotPasswordAt",
          "role",
          "avatar",
          "title",
          "phone",
          "referralRank",
          "referralPath",
          "referralCode",
          "exp",
          "points",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.explorer.update",
      "actionParameters": {},
      "subject": "plugin::users-permissions.user",
      "properties": {
        "fields": [
          "username",
          "email",
          "provider",
          "password",
          "resetPasswordToken",
          "confirmationToken",
          "confirmed",
          "blocked",
          "lastForgotPasswordAt",
          "role",
          "avatar",
          "title",
          "phone",
          "referralRank",
          "referralPath",
          "referralCode",
          "exp",
          "points",
          "isHighlighted"
        ]
      },
      "conditions": []
    },
    {
      "action": "plugin::content-manager.single-types.configure-view",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::content-type-builder.read",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::documentation.read",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::documentation.settings.read",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::documentation.settings.regenerate",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::documentation.settings.update",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::email.settings.read",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::i18n.locale.create",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::i18n.locale.delete",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::i18n.locale.read",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::i18n.locale.update",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::import-export-entries.export",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::import-export-entries.import",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::upload.assets.copy-link",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::upload.assets.create",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::upload.assets.download",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::upload.assets.update",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::upload.configure-view",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::upload.read",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::upload.settings.read",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::users-permissions.advanced-settings.read",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::users-permissions.advanced-settings.update",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::users-permissions.email-templates.read",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::users-permissions.email-templates.update",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::users-permissions.providers.read",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::users-permissions.providers.update",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::users-permissions.roles.create",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::users-permissions.roles.delete",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::users-permissions.roles.read",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    },
    {
      "action": "plugin::users-permissions.roles.update",
      "actionParameters": {},
      "subject": null,
      "properties": {},
      "conditions": []
    }
  ]
}